version: '2'
volumes:
  gocd-gocd-server-db:
    driver: nfs
    driver_opts:
      share: nas.barfoot.local:/volume1/docker/gocd-gocd-server-db
  gocd-gocd-server-etc:
    driver: nfs
    driver_opts:
      share: nas.barfoot.local:/volume1/docker/gocd-gocd-server-etc
  gocd-gocd-server-artifacts:
    driver: nfs
    driver_opts:
      share: nas.barfoot.local:/volume1/docker/gocd-gocd-server-artifacts
services:
  loadbalancer:
    image: rancher/lb-service-haproxy:v0.4.6
    ports:
    - 8154:8154/tcp
    labels:
      io.rancher.container.agent.role: environmentAdmin
      cloud.hutter.autofw.ip.firewall.dstnat: protocol=tcp,dstport=8154,ininterface=sfp1
      cloud.hutter.autofw.ip.dns.static.comment: gocd di
      cloud.hutter.autofw.ip.dns.static: name=ci.hutter.cloud
      cloud.hutter.autofw.enable: 'true'
      io.rancher.container.create_agent: 'true'
  gocd-server:
    image: sebastianhutter/gocd-server:latest
    environment:
      GOCD_SITEURL:
      GOCD_SECURESITEURL:
      GOCD_AGENTAUTOREGISTERKEY:
      GOCD_LDAPURI:
      GOCD_LDAPMANAGERDN:
      GOCD_LDAPMANAGERPASSWORD:
      GOCD_LDAPSEARCHFILTER:
      GOCD_LDAPSEARCHBASE:
      GOCD_LDAPADMINUSER:
      GOCD_YAML_REPOSITORIES:
      VAULT_SERVER:
      VAULT_ROLE_ID:
      VAULT_SECRET_ID:
      VAULT_SECRET_DOCKER_USER:
      VAULT_SECRET_DOCKER_PASS:
      VAULT_SECRET_GITHUB_KEY:
      GOCD_ENABLE_LDAP:
      MSG_TIME:
    stdin_open: true
    volumes:
    - gocd-gocd-server-etc:/etc/go
    - gocd-gocd-server-db:/var/lib/go-server/db
    - gocd-gocd-server-artifacts:/var/lib/go-server/artifacts
    tty: true
    labels:
      io.rancher.container.pull_image: always
      cloud.hutter.watcher.ip.enable: true
      cloud.hutter.watcher.ip.reboot: reverse-services-reverse-nginx-1,status-statuspage-1
  gocd-agent:
    image: sebastianhutter/gocd-agent:latest
    environment:
      VAULT_SERVER:
      VAULT_ROLE_ID:
      VAULT_SECRET_ID:
      VAULT_SECRET_DOCKER_USER:
      VAULT_SECRET_DOCKER_PASS:
      VAULT_SECRET_GITHUB_KEY:
      GO_SERVER_URL:
      GOCD_AGENTAUTOREGISTERKEY:
      VAULT_SECRET_RANCHER_API:
    stdin_open: true
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    tty: true
    labels:
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
