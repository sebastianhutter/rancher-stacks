version: '2'
volumes:
  gocd-gocd-server-artifacts:
    driver: nfs
    driver_opts:
      share: nas.barfoot.local:/volume1/docker/gocd-gocd-server-artifacts
  gocd-gocd-server-config:
    driver: nfs
    driver_opts:
      share: nas.barfoot.local:/volume1/docker/gocd-gocd-server-config
  gocd-gocd-server-db:
    driver: nfs
    driver_opts:
      share: nas.barfoot.local:/volume1/docker/gocd-gocd-server-db
services:
  gocd-gocd-server-logs:
    driver: nfs
    driver_opts:
      share: nas.barfoot.local:/volume1/docker/gocd-gocd-server-logs
services:
  loadbalancer:
    image: rancher/lb-service-haproxy:v0.4.6
    ports:
    - 8154:8154/tcp
    labels:
      io.rancher.container.agent.role: environmentAdmin
      cloud.hutter.autofw.ip.firewall.dstnat: protocol=tcp,dstport=8154,ininterface=sfp1
      cloud.hutter.autofw.ip.dns.static.comment: gocd di
      cloud.hutter.autofw.ip.dns.static: name=ci.hutter.cloud
      cloud.hutter.autofw.enable: 'true'
      io.rancher.container.create_agent: 'true'
  gocd-server:
    image: sebastianhutter/gocd-server
    environment:
      GOCD_SITEURL:
      GOCD_SECURESITEURL:
      GOCD_AGENTAUTOREGISTERKEY:
      GOCD_LDAPURI:
      GOCD_LDAPMANAGERDN:
      GOCD_LDAPMANAGERPASSWORD:
      GOCD_LDAPSEARCHFILTER:
      GOCD_LDAPSEARCHBASE:
      GOCD_LDAPADMINUSER:
      GOCD_YAML_REPOSITORIES:
      VAULT_SERVER:
      VAULT_ROLE_ID:
      VAULT_SECRET_ID:
      VAULT_SECRET_DOCKER_USER:
      VAULT_SECRET_DOCKER_PASS:
      VAULT_SECRET_GITHUB_KEY:
      MSG_TIME:
      AGENT_AUTO_REGISTER_KEY: ${GOCD_AGENTAUTOREGISTERKEY}
    stdin_open: true
    volumes:
    - gocd-gocd-server-artifacts:/godata/artifacts
    - gocd-gocd-server-config:/godata/config
    - gocd-gocd-server-db:/godata/db
    - gocd-gocd-server-logs:/godata/logs
    tty: true
    labels:
      io.rancher.container.pull_image: always
  gocd-agent:
    image: sebastianhutter/gocd-agent
    environment:
      VAULT_SERVER:
      VAULT_ROLE_ID:
      VAULT_SECRET_ID:
      VAULT_SECRET_DOCKER_USER:
      VAULT_SECRET_DOCKER_PASS:
      VAULT_SECRET_GITHUB_KEY:
      GO_SERVER_URL:
      VAULT_SECRET_RANCHER_API:
      AGENT_AUTO_REGISTER_KEY: ${GOCD_AGENTAUTOREGISTERKEY}
    stdin_open: true
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    tty: true
    labels:
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'
